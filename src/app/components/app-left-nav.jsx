import React from 'react';
import LeftNav from 'material-ui/lib/left-nav';
import List from 'material-ui/lib/lists/list';
import ListItem from 'material-ui/lib/lists/list-item';
import Divider from 'material-ui/lib/divider';
import {SelectableContainerEnhance} from 'material-ui/lib/hoc/selectable-enhance';
import {
  Colors,
  Spacing,
  Typography,
} from 'material-ui/lib/styles';
import {StylePropable} from 'material-ui/lib/mixins';
import appRoutes from '../app-routes';
import {NavigationMenu} from 'material-ui/lib/svg-icons'

const SelectableList = SelectableContainerEnhance(List);

const AppLeftNav = React.createClass({

  propTypes: {
    docked: React.PropTypes.bool.isRequired,
    history: React.PropTypes.object.isRequired,
    location: React.PropTypes.object.isRequired,
    onRequestChangeLeftNav: React.PropTypes.func.isRequired,
    onRequestChangeList: React.PropTypes.func.isRequired,
    open: React.PropTypes.bool.isRequired,
    style: React.PropTypes.object,
  },

  contextTypes: {
    muiTheme: React.PropTypes.object,
  },

  mixins: [
    StylePropable,
  ],

  handleRequestChangeLink(event, value) {
    window.location = value;
  },

  handleTouchTapHeader() {
    this.props.history.push('/');
    this.setState({
      leftNavOpen: false,
    });
  },

  getStyles() {
    return {
      subheader: {
        color: this.context.muiTheme.rawTheme.palette.accent3Color,
      },
      logo: {
        cursor: 'pointer',
        fontSize: 24,
        color: Typography.textFullWhite,
        lineHeight: this.context.muiTheme.rawTheme.spacing.desktopKeylineIncrement + 'px',
        fontWeight: Typography.fontWeightLight,
        backgroundColor: this.context.muiTheme.rawTheme.palette.primary1Color,
        paddingLeft: this.context.muiTheme.rawTheme.spacing.desktopGutter,
        marginBottom: 8,
      },
    };
  },

  getListItems(currentNode, onRequestChangeList) {
    let props = {};
    let arrayToApply = [];
    if (currentNode.name) {
      props.primaryText = currentNode.name
    }
    if (currentNode.childRoutes) {
      props.primaryTogglesNestedList = true;
      let nestedItems = [];
      for (let child of currentNode.childRoutes) {
        if (! child.hidden) {
          nestedItems.push(this.getListItems(child))
        }
      }
      if (currentNode.path == '/') {
        arrayToApply = [SelectableList, {valueLink: {value: '/', requestChange: onRequestChangeList}}];
        arrayToApply = arrayToApply.concat(nestedItems);
      } else {
        props.nestedItems = nestedItems;
        arrayToApply = [ListItem, props];
      }
    } else {
      props.value = currentNode.fullPath;
      arrayToApply = [ListItem, props];
    }
    return React.createElement.apply(this, arrayToApply);
  },

  render() {
    const {
      location,
      docked,
      onRequestChangeLeftNav,
      onRequestChangeList,
      open,
      style,
    } = this.props;

    const styles = this.getStyles();
    const autoGeneratedList = this.getListItems(appRoutes, onRequestChangeList);

    // This was removed from just above {autoGeneratedList} when I decided to make the left-nav always closed
    //<NavigationMenu />
    //<div style={this.prepareStyles(styles.logo)} onTouchTap={this.handleTouchTapHeader}>
    //  Pendo
    //</div>

    return (
      <LeftNav
        style={style}
        docked={docked}
        open={open}
        onRequestChange={onRequestChangeLeftNav}
      >

        {autoGeneratedList}
        <Divider />
        <SelectableList
          subheader="Resources"
          subheaderStyle={styles.subheader}
          valueLink={{value: '', requestChange: this.handleRequestChangeLink}}
        >
          <ListItem primaryText="GitHub" value="https://github.com/lmaccherone/material-ui-template" />
          <ListItem primaryText="Material-UI" value="https://github.com/callemall/material-ui" />
          <ListItem primaryText="React" value="http://facebook.github.io/react" />
          <ListItem
            primaryText="Material Design"
            value="https://www.google.com/design/spec/material-design/introduction.html"
          />
        </SelectableList>
      </LeftNav>
    );
  },
});

export default AppLeftNav;
